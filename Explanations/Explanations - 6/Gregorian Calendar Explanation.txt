According to Gregorian Calendar, it was Monday on the date 01/01/2001. If any year is input, 
Write a program to display what is the day on the 1st January of this year. 

-----------------------------------------------

This question is very deceptive. Definitely not as easy as it appears to be. I always postponed this because I couldn't find a way to give an O(1) solution which
I was sure was lurking somehere seeing the word leap year. ... But, there isn't one. It has an O(n) solution.


2001 is set at an offset of 0.

Now, there are two important cases.

First, we descibe how to count offset in between two years Monday. If year X has Monday on day I, Year X+1, has Monday on day I+1 if it is non-leap nad I+2 if it is leap.
We stop just before the year because that year's February doesn't impact it's January.

Case 1 - The year is before 2001 ...

Count the offset in between year and 2001. 
We keep doing this till we find the offset from year X to 2001.

We're counting offset from year X not 2001 ... So, after we're done ... Offset = 7 - offset%7, unless the offset is a multiple of 7, then it stays 0.
We counted offset from year X to 2001 ... We counted keeping X at 0 ... Now we need to do it by keeping 2001 at 0. so the entire thing needs to be 'pushed down'
by 0 mod 7 ... This is the same as 7-x%7.

Case 2- The year is after 2001 ...

Count the number of offsets from 2001 till the year. 

----------------------------------------------------

    if(year <= 2001)
    {
        for(int year_i = year; year_i < 2001; year_i++)
        {
            offset += (is_leap_year(year_i) ? 2 : 1);
        }
        offset = (offset%7 == 0 ? 0 : 7 - offset%7); // We're going backwards
    }
    else
    {
        for(int year_i = 2001; year_i < year; year_i++)
        {
            offset += (is_leap_year(year_i) ? 2 : 1);
        }
    }

    print_day(offset%7);

----------------------------------------------------

    switch(day)
    {
        case 0: printf("monday\n");
                return;

        case 1: printf("tuesday\n");
                return;

        case 2: printf("wednesday\n");
                return;

        case 3: printf("thursday\n");
                return;

        case 4: printf("friday\n");
                return;

        case 5: printf("saturday\n");
                return;

        case 6: printf("sunday\n");
                return;
    }

-----------------------------------

int is_leap_year(int year)
{
    if(year%400 == 0)
        return true;
    else if(year%4 == 0 && year%100 != 0)
        return true;
    else
        return false;
}