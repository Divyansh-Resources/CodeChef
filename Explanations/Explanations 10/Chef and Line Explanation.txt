
Sort the points and then be greedy. 

First choose B[1] = A[1]

After that, if your last point chosen = A[i] ... the first element in A not greater than k*A[i] + B

Keep a pointer to the last position of the subsequence chosen so far. 

Be careful about the pointers. I made a mistake in this. I didn't update it correctly. If the pointer reaches the end, then stop. 

----------------------------------------------------------------------------
void solve()
{
    int no_of_elements;
    long long k, b;
    scanf("%d %lld %lld", &no_of_elements, &k, &b);

    vector <long long> A(no_of_elements + 1, 0);
    for(int i = 1; i <= no_of_elements; i++) scanf("%lld", &A[i]);

    sort(all(A));

    long long last_element = A[1];
    int subsequence_length = 1, last_element_position = 1;

    while(last_element*k + b <= A[no_of_elements] && last_element_position < no_of_elements)
    {
        long long next_element = last_element*k + b;

        int i = last_element_position + 1;
        while(i <= no_of_elements && A[i] < next_element)
            i++;

        last_element = A[i];
        last_element_position = i;

        subsequence_length++;
    }

    printf("%d\n", subsequence_length);
}