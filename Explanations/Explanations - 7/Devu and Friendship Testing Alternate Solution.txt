Devu has n weird friends. Its his birthday today, so they thought that this is the best occasion for testing their friendship with him. 
They put up conditions before Devu that they will break the friendship unless he gives them a grand party on their chosen day. 
Formally, ith friend will break his friendship if he does not receive a grand party on dith day. 
Devu despite being as rich as Gatsby, is quite frugal and can give at most one grand party daily. Also, he wants to invite only one person in a party. 
So he just wonders what is the maximum number of friendships he can save. Please help Devu in this tough task !! 

----------------------------------------------------------------
Here ... I used an unordered set ... It uses hashing instead of a balanced tree and takes O(1) for insertion on average ... However, it also needs to handle collisions.

The unordered set container in STL needs 2011 gcc to work ... The CodeChef website had the compiler ... My computer didn't ...

This wasn't any faster than the set solution ... Guess collision management took up the time.

-----------------------------------------------------------

void solve()
{
    int no_of_friends;
    unordered_set <int> saved_friendships;
    scanf("%d", &no_of_friends);

    for(int i = 1; i <= no_of_friends; i++)
    {
        int day_i;
        scanf("%d", &day_i);

        saved_friendships.insert(day_i);
    }

    printf("%d\n", saved_friendships.size());
}